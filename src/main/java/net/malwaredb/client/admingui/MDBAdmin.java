/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.malwaredb.client.admingui;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.malwaredb.client.MDBAdminClient;
import net.malwaredb.client.MDBClient;
import net.malwaredb.client.admin.beans.SearchUsersResult;
import net.malwaredb.client.admin.beans.UserInformation;

/**
 *
 * @author rjzak
 */
public class MDBAdmin extends javax.swing.JDialog {
    protected MDBAdminClient adminClient;
        
    /**
     * Creates new form MDBAdmin
     */
    public MDBAdmin(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        try {
            MDBClient client = new MDBClient();
            adminClient = client.getAdminClient();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.toString(), "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(MDBAdmin.class.getName()).log(Level.SEVERE, null, ex);
            setVisible(false);
            dispose();
        }
        
        updateUsersTable();
    }
    
    public void updateUsersTable() {
        DefaultTableModel dm = (DefaultTableModel) usersTable.getModel();
        int rowCount = dm.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
        
        SearchUsersResult usersListResult;
        try {
            usersListResult = adminClient.listUsers();
        } catch (IOException | InterruptedException ex) {
            JOptionPane.showMessageDialog(this, ex.toString(), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        for(UserInformation userInfo: usersListResult.getFoundUsers()) {
            dm.addRow(new Object[]{userInfo.getUserID(), userInfo.getUsername(), userInfo.getEmail()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        usersTab = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        usersTable = new javax.swing.JTable();
        groupsTab = new javax.swing.JPanel();
        sourcesTab = new javax.swing.JPanel();
        fileTypesTab = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        fileMenuAddUser = new javax.swing.JMenuItem();
        fileMenuRefreshUsers = new javax.swing.JMenuItem();
        fileMenuExit = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("MalwareDB Administration");

        usersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Username", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(usersTable);

        javax.swing.GroupLayout usersTabLayout = new javax.swing.GroupLayout(usersTab);
        usersTab.setLayout(usersTabLayout);
        usersTabLayout.setHorizontalGroup(
            usersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 643, Short.MAX_VALUE)
        );
        usersTabLayout.setVerticalGroup(
            usersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usersTabLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Users", usersTab);

        javax.swing.GroupLayout groupsTabLayout = new javax.swing.GroupLayout(groupsTab);
        groupsTab.setLayout(groupsTabLayout);
        groupsTabLayout.setHorizontalGroup(
            groupsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 643, Short.MAX_VALUE)
        );
        groupsTabLayout.setVerticalGroup(
            groupsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 258, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Groups", groupsTab);

        javax.swing.GroupLayout sourcesTabLayout = new javax.swing.GroupLayout(sourcesTab);
        sourcesTab.setLayout(sourcesTabLayout);
        sourcesTabLayout.setHorizontalGroup(
            sourcesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 643, Short.MAX_VALUE)
        );
        sourcesTabLayout.setVerticalGroup(
            sourcesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 258, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Sources", sourcesTab);

        javax.swing.GroupLayout fileTypesTabLayout = new javax.swing.GroupLayout(fileTypesTab);
        fileTypesTab.setLayout(fileTypesTabLayout);
        fileTypesTabLayout.setHorizontalGroup(
            fileTypesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 643, Short.MAX_VALUE)
        );
        fileTypesTabLayout.setVerticalGroup(
            fileTypesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 258, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("File Types", fileTypesTab);

        fileMenu.setText("File");

        fileMenuAddUser.setText("Add User");
        fileMenuAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuAddUserActionPerformed(evt);
            }
        });
        fileMenu.add(fileMenuAddUser);

        fileMenuRefreshUsers.setText("Refresh User List");
        fileMenuRefreshUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuRefreshUsersActionPerformed(evt);
            }
        });
        fileMenu.add(fileMenuRefreshUsers);

        fileMenuExit.setText("Exit");
        fileMenuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuExitActionPerformed(evt);
            }
        });
        fileMenu.add(fileMenuExit);

        jMenuBar1.add(fileMenu);

        editMenu.setText("Edit");
        jMenuBar1.add(editMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fileMenuRefreshUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuRefreshUsersActionPerformed
        updateUsersTable();
    }//GEN-LAST:event_fileMenuRefreshUsersActionPerformed

    private void fileMenuAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuAddUserActionPerformed
        AddUserForm addUserForm = new AddUserForm(new javax.swing.JFrame(), true, adminClient);
        addUserForm.setVisible(true);
    }//GEN-LAST:event_fileMenuAddUserActionPerformed

    private void fileMenuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuExitActionPerformed
        dispose();
    }//GEN-LAST:event_fileMenuExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MDBAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MDBAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MDBAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MDBAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MDBAdmin dialog = new MDBAdmin(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem fileMenuAddUser;
    private javax.swing.JMenuItem fileMenuExit;
    private javax.swing.JMenuItem fileMenuRefreshUsers;
    private javax.swing.JPanel fileTypesTab;
    private javax.swing.JPanel groupsTab;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel sourcesTab;
    private javax.swing.JPanel usersTab;
    private javax.swing.JTable usersTable;
    // End of variables declaration//GEN-END:variables
}
